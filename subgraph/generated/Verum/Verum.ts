// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class attestationPosted extends ethereum.Event {
  get params(): attestationPosted__Params {
    return new attestationPosted__Params(this);
  }
}

export class attestationPosted__Params {
  _event: attestationPosted;

  constructor(event: attestationPosted) {
    this._event = event;
  }

  get attester(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get profile(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get attestation(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class contentPosted extends ethereum.Event {
  get params(): contentPosted__Params {
    return new contentPosted__Params(this);
  }
}

export class contentPosted__Params {
  _event: contentPosted;

  constructor(event: contentPosted) {
    this._event = event;
  }

  get contentURI(): string {
    return this._event.parameters[0].value.toString();
  }
}

export class Verum extends ethereum.SmartContract {
  static bind(address: Address): Verum {
    return new Verum("Verum", address);
  }
}

export class AttestToProfileCall extends ethereum.Call {
  get inputs(): AttestToProfileCall__Inputs {
    return new AttestToProfileCall__Inputs(this);
  }

  get outputs(): AttestToProfileCall__Outputs {
    return new AttestToProfileCall__Outputs(this);
  }
}

export class AttestToProfileCall__Inputs {
  _call: AttestToProfileCall;

  constructor(call: AttestToProfileCall) {
    this._call = call;
  }

  get profile(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get attestation(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class AttestToProfileCall__Outputs {
  _call: AttestToProfileCall;

  constructor(call: AttestToProfileCall) {
    this._call = call;
  }
}

export class PostContentCall extends ethereum.Call {
  get inputs(): PostContentCall__Inputs {
    return new PostContentCall__Inputs(this);
  }

  get outputs(): PostContentCall__Outputs {
    return new PostContentCall__Outputs(this);
  }
}

export class PostContentCall__Inputs {
  _call: PostContentCall;

  constructor(call: PostContentCall) {
    this._call = call;
  }

  get contentURI(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class PostContentCall__Outputs {
  _call: PostContentCall;

  constructor(call: PostContentCall) {
    this._call = call;
  }
}
